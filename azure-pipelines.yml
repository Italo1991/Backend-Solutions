# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  buildConfiguration: 'Release'
  imageName: 'pipelines-italo-customer-docker'

parameters:
- name: vmImage
  displayName: Pool Image
  type: string
  default: ubuntu-latest
  values:
  - windows-latest
  - ubuntu-latest
- name: runTests
  displayName: Run Tests
  type: boolean
  default: false

jobs:
# - deployment: DeployAPI
#   environment: 'customer-api-dev'
- job: Build
  displayName: Build and Test
  continueOnError: false
  timeoutInMinutes: 3
  pool:
    vmImage: ${{ parameters.vmImage }}
  
  steps:
  # - script: echo building $(Build.BuildNumber) with ${{ parameters.vmImage }}
  #   displayName: 'pool vm-image'

  # - task: DotNetCoreCLI@2
  #   displayName: 'build'
  #   inputs:
  #     command: 'build'
  #     projects: '**/*.csproj'
  #     arguments: '--configuration $(buildConfiguration)'

  # - ${{ if eq(parameters.runTests, true) }}:
  #   - task: DotNetCoreCLI@2
  #     displayName: 'test'
  #     inputs:
  #       command: 'test'
  #       projects: '**/*Tests/*.csproj'
  #       arguments: '--configuration $(buildConfiguration)'
  - task: Docker@2
    displayName: Build an image
    inputs:
      repository: $(imageName)
      command: build
      Dockerfile: Dockerfile

# - job: Publish
#   dependsOn:
#   - Build
#   displayName: Publish 
#   steps:
#   - task: DotNetCoreCLI@2
#     inputs:
#       command: publish
#       publishWebProjects: True
#       arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#       zipAfterPublish: True

#   - task: PublishPipelineArtifact@1
#     inputs:
#       targetPath: '$(Build.ArtifactStagingDirectory)' 
#       artifactName: 'myWebsiteName'